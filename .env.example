# =============================================================================
# PostgreSQL Configuration (Source of Truth)
# =============================================================================
POSTGRES_USER=admiral
POSTGRES_PASSWORD=changeme-use-strong-password
POSTGRES_DB=node_pulse_admiral

# =============================================================================
# Valkey/Redis Configuration (Source of Truth)
# =============================================================================
VALKEY_HOST=valkey
VALKEY_PORT=6379
VALKEY_PASSWORD=changeme-use-strong-password

# =============================================================================
# Submarines Configuration (Go-Gin Backend)
# =============================================================================

# Database connection (references PostgreSQL config)
DB_HOST=postgres
DB_PORT=5432
DB_USER=${POSTGRES_USER}
DB_PASSWORD=${POSTGRES_PASSWORD}
DB_NAME=${POSTGRES_DB}
DB_SSLMODE=disable

# Server settings
PORT=8080
INGEST_PORT=${PORT}
STATUS_PORT=8082
GIN_MODE=release

# Security
JWT_SECRET=changeme-use-strong-secret

# Certificate Configuration
# Certificate validity period (days) for mTLS client certificates
CERT_VALIDITY_DAYS=180

# Server ID Validation (Always Active)
# NOTE: mTLS is build-time decision (not runtime toggle)
#   - Development builds: server_id validation only
#   - Production builds: mTLS (strict) + server_id validation
# Cache TTL for server ID validation (applies to both valid and invalid server IDs)
# Valid IDs cached for 1 hour reduces database load
# Invalid IDs cached for 1 hour prevents DoS attacks from repeated invalid requests
SERVER_ID_CACHE_TTL=3600

# Digest worker
DIGEST_ID=digest-1

# =============================================================================
# Flagship Configuration (Laravel Dashboard)
# =============================================================================

# App settings
APP_NAME="Node Pulse"
APP_ENV=production
APP_DEBUG=false
APP_KEY=  # Generate with: docker-compose run --rm flagship php artisan key:generate --show
APP_URL=http://localhost:3000
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US
APP_MAINTENANCE_DRIVER=file

# Logging
LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=info

# Database (references PostgreSQL config)
DB_CONNECTION=pgsql
DB_DATABASE=${POSTGRES_DB}
DB_USERNAME=${POSTGRES_USER}
# DB_HOST, DB_PORT, DB_PASSWORD, DB_SSLMODE - uses values from Submarines section above

# Sessions & Cache (references Valkey config)
SESSION_DRIVER=redis
SESSION_LIFETIME=120
CACHE_STORE=redis
QUEUE_CONNECTION=redis
REDIS_CLIENT=phpredis
REDIS_HOST=${VALKEY_HOST}
REDIS_PORT=${VALKEY_PORT}
REDIS_PASSWORD=${VALKEY_PASSWORD}

# Submarines API endpoint (server-side calls)
SUBMARINES_API_URL=http://submarines-ingest:8080

# Mail (optional, defaults to log)
MAIL_MAILER=log
MAIL_FROM_ADDRESS="noreply@nodepulse.local"
MAIL_FROM_NAME="${APP_NAME}"

# Vite
VITE_APP_NAME="${APP_NAME}"

# CAPTCHA Configuration
# Options: turnstile, recaptcha_v2, recaptcha_v3
# Leave empty or omit to disable CAPTCHA
CAPTCHA_PROVIDER=turnstile

# Comma-separated list of features to enable CAPTCHA for
# Available: login, register, forgot_password, reset_password
# Example: login,register,forgot_password
CAPTCHA_ENABLED_FEATURES=login,register,forgot_password


# Cloudflare Turnstile (get keys at: https://dash.cloudflare.com/)
TURNSTILE_SITE_KEY=
TURNSTILE_SECRET_KEY=

# Google reCAPTCHA v2 (get keys at: https://www.google.com/recaptcha/admin)
RECAPTCHA_V2_SITE_KEY=
RECAPTCHA_V2_SECRET_KEY=

# Google reCAPTCHA v3 (get keys at: https://www.google.com/recaptcha/admin)
RECAPTCHA_V3_SITE_KEY=
RECAPTCHA_V3_SECRET_KEY=
RECAPTCHA_V3_SCORE_THRESHOLD=0.5

# =============================================================================
# Production Domain Configuration (Caddy)
# =============================================================================
# Used by Caddy reverse proxy for automatic HTTPS via Let's Encrypt
# For local development, use .localhost domains (HTTP only)
# For production, use real domains and update compose.yml to use Caddyfile.prod

ADMIN_DOMAIN=admin.localhost
INGEST_DOMAIN=ingest.localhost
STATUS_DOMAIN=status.localhost

# =============================================================================
# Admin User Registration (Automatically managed by deploy.sh)
# =============================================================================
# These variables are set during deployment and automatically removed after use
# DO NOT set these manually - they are only used during initial deployment
# ADMIN_NAME=Administrator
# ADMIN_EMAIL=admin@example.com
# ADMIN_PASSWORD=your-secure-password

# =============================================================================
# Notes
# =============================================================================
# DATABASE_URL is automatically constructed in docker-compose.yml
# from POSTGRES_* variables for services that need it
