# Development Dockerfile for Laravel with Ansible
# Includes development tools and hot reload capabilities
# Clean PHP-FPM only - Caddy handles HTTP in separate container

FROM php:8.3-fpm-alpine

# Install system dependencies, PHP extensions, and development tools
RUN apk add --no-cache \
    curl \
    git \
    bash \
    nodejs \
    npm \
    openssh-client \
    icu-dev \
    libzip-dev \
    oniguruma-dev \
    postgresql-dev \
    linux-headers \
    $PHPIZE_DEPS \
    # Python and Ansible for deployment testing
    python3 \
    py3-pip \
    ansible \
    sshpass \
    && docker-php-ext-install -j$(nproc) \
    intl \
    mbstring \
    zip \
    bcmath \
    pcntl \
    pdo_pgsql \
    pgsql \
    opcache \
    && docker-php-ext-enable opcache

# Install Xdebug for development (optional, comment out if not needed)
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# Install Redis extension
RUN pecl install redis \
    && docker-php-ext-enable redis

# Configure PHP for development
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

# Configure Xdebug (optional)
RUN echo "xdebug.mode=debug,develop" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.start_with_request=yes" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_host=host.docker.internal" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
    && echo "xdebug.client_port=9003" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Create non-root user matching host UID/GID
ARG UID=1000
ARG GID=1000

RUN delgroup dialout 2>/dev/null || true \
    && addgroup -g ${GID} -S laravel \
    && adduser -u ${UID} -S laravel -G laravel

# Configure PHP-FPM to run as laravel user
RUN sed -i "s/user = www-data/user = laravel/g" /usr/local/etc/php-fpm.d/www.conf \
    && sed -i "s/group = www-data/group = laravel/g" /usr/local/etc/php-fpm.d/www.conf \
    && echo "php_admin_flag[log_errors] = on" >> /usr/local/etc/php-fpm.d/www.conf

# Set working directory
WORKDIR /var/www/html

# Set environment variables
ENV APP_ENV=local \
    APP_DEBUG=true \
    COMPOSER_ALLOW_SUPERUSER=1 \
    NODE_ENV=development

# Copy composer files first for better layer caching
COPY --chown=laravel:laravel composer.json composer.lock ./

# Install PHP dependencies (including dev dependencies)
RUN composer install \
    --no-scripts \
    --no-autoloader \
    --prefer-dist

# Copy package files for npm
COPY --chown=laravel:laravel package*.json ./

# Install Node dependencies
RUN npm install

# Copy the rest of the application
COPY --chown=laravel:laravel . .

# Generate optimized autoloader
RUN composer dump-autoload --optimize

# Create storage directories and set permissions
RUN mkdir -p \
    storage/logs \
    storage/framework/sessions \
    storage/framework/views \
    storage/framework/cache \
    storage/framework/testing \
    storage/app/public \
    bootstrap/cache \
    && chown -R laravel:laravel storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# Expose PHP-FPM port
EXPOSE 9000

# Health check - verify PHP-FPM is listening on port 9000
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
    CMD pidof php-fpm || exit 1

# Run PHP-FPM as root (master process)
# Worker processes will run as 'laravel' user (configured in www.conf at lines 66-68)
# Note: Vite dev server is run separately via docker-compose command
CMD ["php-fpm", "-F", "-R"]
