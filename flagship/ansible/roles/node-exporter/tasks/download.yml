---
# Download node_exporter binary

- name: Check if node_exporter binary exists
  stat:
    path: "{{ node_exporter_bin_path }}"
  register: node_exporter_binary

- name: Get installed node_exporter version
  command: "{{ node_exporter_bin_path }} --version"
  register: node_exporter_current_version
  changed_when: false
  failed_when: false
  when: node_exporter_binary.stat.exists

- name: Set node_exporter installation needed flag
  set_fact:
    node_exporter_needs_install: >-
      {{
        not node_exporter_binary.stat.exists or
        node_exporter_version not in node_exporter_current_version.stdout | default('')
      }}

- name: Download node_exporter archive
  get_url:
    url: "{{ node_exporter_download_url }}"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.tar.gz"
    mode: "0644"
    timeout: 60
  when: node_exporter_needs_install
  register: node_exporter_download

- name: Extract node_exporter archive
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.tar.gz"
    dest: "{{ node_exporter_install_dir }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
  when: node_exporter_needs_install

- name: Clean up downloaded archive
  file:
    path: "/tmp/node_exporter-{{ node_exporter_version }}.tar.gz"
    state: absent
  when: node_exporter_needs_install
