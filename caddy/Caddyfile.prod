# Caddy Configuration for Node Pulse Admiral
# Handles all HTTP/HTTPS traffic and PHP-FPM proxying

# Global options
{

}

# ------------------------------------------------------------
# Admin Dashboard (Flagship - Laravel)
# ------------------------------------------------------------
{$ADMIN_DOMAIN} {
    # Enable gzip compression
    encode gzip

    # PHP-FPM configuration
    # Note: root is set inside PHP-FPM, so all requests (including static files) go through PHP
    php_fastcgi flagship:9000 {
        # Set document root (inside PHP-FPM container)
        root /var/www/html/public

        # Environment variables for PHP
        env APP_ENV production

        # Timeouts
        read_timeout 60s
        write_timeout 60s
    }

    # Security headers
    header {
        # XSS Protection
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"

        # Referrer Policy
        Referrer-Policy "strict-origin-when-cross-origin"

        # Remove server header
        -Server
    }

    # Logging
    log {
        output file /var/log/caddy/admin-access.log
        format json
    }
}

# ------------------------------------------------------------
# Metrics Ingestion (Submarines Ingest)
# ------------------------------------------------------------
{$INGEST_DOMAIN} {
    # Enable mTLS for agent authentication
    tls {
        client_auth {
            mode require_and_verify
            trusted_ca_cert_file /certs/ca.crt
        }
    }

    # Reverse proxy to Go service
    reverse_proxy submarines-ingest:8080 {
        # Health check
        health_uri /health
        health_interval 10s
        health_timeout 3s

        # Headers
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}

        # Pass client certificate information to backend
        header_up X-Client-Cert-Serial {http.request.tls.client.serial_number}
        header_up X-Client-Cert-Subject {http.request.tls.client.subject}
        header_up X-Client-Cert-CN {http.request.tls.client.subject.common_name}
        header_up X-Client-Cert-Fingerprint {http.request.tls.client.fingerprint}
    }

    # Security headers
    header {
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        -Server
    }

    # Rate limiting (optional, for production)
    # rate_limit {
    #     zone metrics {
    #         key {remote_host}
    #         events 1000
    #         window 1m
    #     }
    # }

    log {
        output file /var/log/caddy/ingest-access.log
        format json
    }
}

# ------------------------------------------------------------
# Status Pages (Submarines Status)
# ------------------------------------------------------------
{$STATUS_DOMAIN} {
    reverse_proxy submarines-status:8082 {
        health_uri /health
        health_interval 10s
        health_timeout 3s

        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    header {
        X-Content-Type-Options "nosniff"
        -Server
    }

    log {
        output file /var/log/caddy/status-access.log
        format json
    }
}

# ------------------------------------------------------------
# Catch-all for unmatched requests (IP access, unknown domains)
# ------------------------------------------------------------
:80 {
    # Return 404 for any unmatched requests
    respond "404 Not Found" 404
}
