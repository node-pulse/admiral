---
# Process Exporter Role Defaults

# Version
process_exporter_version: "0.8.3"

# Download configuration
process_exporter_download_base_url: "https://github.com/ncabatoff/process-exporter/releases/download"
process_exporter_download_url: "{{ process_exporter_download_base_url }}/v{{ process_exporter_version }}/process-exporter-{{ process_exporter_version }}.linux-{{ process_exporter_arch }}.tar.gz"

# Architecture (auto-detected)
process_exporter_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

# Installation paths
process_exporter_install_dir: "/opt/process_exporter"
process_exporter_bin_path: "/usr/local/bin/process-exporter"
process_exporter_config_dir: "/etc/process_exporter"
process_exporter_config_file: "{{ process_exporter_config_dir }}/config.yml"

# Service configuration
process_exporter_user: "process_exporter"
process_exporter_group: "process_exporter"

# Network configuration
process_exporter_listen_address: "127.0.0.1"  # localhost only (security - scrape via Node Pulse Agent)
process_exporter_listen_port: 9256

# Process monitoring configuration
# By default, track all processes grouped by command name
# This captures top CPU/memory consumers dynamically
process_exporter_track_all: true

# Custom process groups (optional)
# Uncomment and customize to track specific processes with custom grouping
# process_exporter_process_names:
#   - name: "{{.Comm}}"
#     cmdline: []
#   - name: "postgres"
#     cmdline:
#       - "postgres.*"
#   - name: "nginx"
#     cmdline:
#       - "nginx.*"

# Scraping configuration
process_exporter_children: true  # Include child processes in metrics
process_exporter_threads: true   # Include threads in metrics
process_exporter_smaps: false    # Disable detailed memory maps (reduces overhead)
process_exporter_recheck: false  # Don't recheck process names on every scrape (performance)

# Command line flags (additional custom flags)
process_exporter_extra_flags: []
# Example:
# - "--procfs=/host/proc"  # For containerized deployments
