services:
  # PostgreSQL 18 - Main Database
  postgres:
    image: postgres:18-alpine@sha256:f898ac406e1a9e05115cc2efcb3c3abb3a92a4c0263f3b6f6aaae354cbb1953a
    container_name: node-pulse-postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./postgres_data:/var/lib/postgresql
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-postgres}
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-pulse-admiral

  # Valkey - Redis alternative for caching and sessions
  valkey:
    image: valkey/valkey:latest@sha256:81db6d39e1bba3b3ff32bd3a1b19a6d69690f94a3954ec131277b9a26b95b3aa
    container_name: node-pulse-valkey
    restart: unless-stopped
    env_file:
      - .env
    command: valkey-server --appendonly yes --requirepass ${VALKEY_PASSWORD:-valkeypassword}
    volumes:
      - ./valkey_data:/data
    healthcheck:
      test:
        - CMD
        - valkey-cli
        - --raw
        - incr
        - ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - node-pulse-admiral

  # Flagship Migration - Run database migrations (idempotent)
  flagship-migrate:
    image: ghcr.io/node-pulse/node-pulse-migrate:latest
    container_name: node-pulse-flagship-migrate
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - node-pulse-admiral
    restart: "no"

  # Go-Gin Submarines Ingest - Agent Metrics Ingestion (HTTP -> Valkey Stream)
  submarines-ingest:
    image: ghcr.io/node-pulse/node-pulse-submarines-ingest:latest
    container_name: node-pulse-submarines-ingest
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MASTER_KEY_PATH: /secrets/master.key
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    volumes:
      - ./secrets:/secrets:ro
    networks:
      - node-pulse-admiral

  # Go Submarines Digest - Background processor (Valkey Stream -> PostgreSQL)
  submarines-digest:
    image: ghcr.io/node-pulse/node-pulse-submarines-digest:latest
    container_name: node-pulse-submarines-digest
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
    networks:
      - node-pulse-admiral

  # Go Submarines Status - Public status pages and badges (read-only)
  submarines-status:
    image: ghcr.io/node-pulse/node-pulse-submarines-status:latest
    container_name: node-pulse-submarines-status
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - node-pulse-admiral

  # Go Submarines SSH WebSocket - Interactive terminal access
  submarines-sshws:
    image: ghcr.io/node-pulse/node-pulse-submarines-sshws:latest
    container_name: node-pulse-submarines-sshws
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MASTER_KEY_PATH: /secrets/master.key
    ports:
      - "127.0.0.1:6001:6001" # Localhost only - not exposed publicly
    depends_on:
      postgres:
        condition: service_healthy
      flagship-migrate:
        condition: service_completed_successfully
    volumes:
      - ./secrets:/secrets:ro
    networks:
      - node-pulse-admiral

  # Laravel Flagship - Admin Dashboard (PHP-FPM only)
  flagship:
    image: ghcr.io/node-pulse/node-pulse-flagship:latest
    container_name: node-pulse-flagship
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - "9000" # PHP-FPM port (not exposed to host, only to Caddy)
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
      flagship-migrate:
        condition: service_completed_successfully
      submarines-ingest:
        condition: service_started
    volumes:
      - ./flagship:/var/www/html # Mount entire app for Caddy to serve static files
      - ./logs/flagship:/var/www/html/storage/logs # Mount logs for persistence
      - ./secrets:/secrets:ro # Mount shared secrets directory (read-only)
      - ./ansible:/var/www/html/ansible # Mount Ansible playbooks
    networks:
      - node-pulse-admiral
    healthcheck:
      test:
        - CMD
        - pidof
        - php-fpm
      interval: 30s
      timeout: 3s
      retries: 3

  # Caddy - Reverse Proxy and Web Server
  caddy:
    image: caddy:2-alpine
    container_name: node-pulse-caddy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Domain configuration (use env vars for flexibility)
      ADMIN_DOMAIN: ${ADMIN_DOMAIN:-admin.localhost}
      INGEST_DOMAIN: ${INGEST_DOMAIN:-ingest.localhost}
      STATUS_DOMAIN: ${STATUS_DOMAIN:-status.localhost}
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp" # HTTP/3
    volumes:
      # Caddyfile configuration
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro

      # Flagship public directory (for serving static files)
      - ./flagship/public:/var/www/flagship/public:ro

      # Caddy data (certificates, etc.) - bind mount like postgres
      - ./caddy_data:/data
      - ./caddy_config:/config

      # Logs
      - ./logs/caddy:/var/log/caddy
    depends_on:
      - flagship
      - submarines-ingest
      - submarines-status
    networks:
      - node-pulse-admiral
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - http://127.0.0.1:2019/metrics
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  node-pulse-admiral:
    driver: bridge
    name: node-pulse-admiral
